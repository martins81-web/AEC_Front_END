{"version":3,"sources":["img/404.jpg","components/Movie.js","components/ManageMovies.js","components/PageNotFound.js","components/EditMovie.js","components/ButtonAddMovie.js","components/ButtonReturnToMovies.js","components/AddMovie.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Movie","props","state","console","log","this","movieData","Col","className","Card","Body","to","title","id","director","year","Img","variant","src","picture","React","Component","ManageMovies","data","fetch","response","json","reponseDeApi","setState","ok","Error","statusText","Row","map","key","i","PageNotFound","require","alt","width","EditMovie","writers","stars","setErrors","handlePicture","bind","handleSave","editMovie","removeMovie","movieID","location","search","substring","length","event","preventDefault","document","getElementById","value","writers1","writers2","writers3","stars1","stars2","stars3","formIsValid","_errors","writer1","Object","keys","method","headers","body","JSON","stringify","jsonResponse","history","push","toast","success","pic","error","Container","Form","Group","as","controlId","Label","Control","type","defaultValue","onBlur","Image","rounded","Button","onClick","ButtonAddMovie","ButtonReturnToMovies","AddMovie","getID","newID","nextID","saveMovie","placeholder","App","useLocation","pathname","fluid","xs","xl","startsWith","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7427eff0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.621e8f32.jpg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Card} from \"react-bootstrap\"\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport class Movie extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n  render() {\r\n    console.log(this.props.movieData);\r\n    return (\r\n      <>\r\n        <Col className=\"col-2 mb-2\"> \r\n          \r\n              <Card className=\"h-100 bg-muted\">\r\n                  <Card.Body className='text-center'>\r\n                    <Link to={\"Movies/\" + this.props.title + \"?id=\" + this.props.movieData.id}>\r\n                      <h5>{this.props.title}</h5>\r\n                    </Link>\r\n                      <h6>{this.props.movieData.director}</h6>\r\n                      <h6>{this.props.movieData.year}</h6>\r\n                  </Card.Body>\r\n                  <Link to={\"Movies/\" + this.props.title + \"?id=\" + this.props.movieData.id}>\r\n                    <Card.Img variant=\"top\" src={this.props.movieData.picture} />\r\n                  </Link>\r\n              </Card> \r\n          \r\n        </Col>     \r\n      </>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Movie } from \"./Movie\";\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nexport class ManageMovies extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [] };\r\n  }\r\n\r\n  //Ajout de la gestion des erreurs\r\n  async componentDidMount() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:3001/movies\");\r\n        const reponseDeApi = await response.json();\r\n        this.setState({ data: reponseDeApi });\r\n        if (!response.ok) {\r\n          //Permet d'attraper l'erreur 500 et l'erreur 400\r\n          throw Error(response.statusText);\r\n        }\r\n      } catch (error) {\r\n        //On gère l'erreur\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n            <Row>\r\n                {this.state.data.map((key,i) => (\r\n                <Movie title={key.title} movieData={key} id={i+1}></Movie>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    );\r\n  }\r\n}","import React from 'react'\r\n\r\nexport class PageNotFound extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (  \r\n            <img src={require('../img/404.jpg')} alt='404' width=\"100%\"/>\r\n        );\r\n    }\r\n}\r\n \r\n","import React from \"react\";\r\nimport { Form, Button,Image,Container,Row,Col } from \"react-bootstrap\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport class EditMovie extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Afin d'éviter une erreur undefined lorsqu'on lit le tableau abilities, on l'initialise à un tableau vide pour débuter.\r\n    this.state = {picture: \"\",\r\n                  data: {title: '', year: \"\", picture: \"\", director: \"\", writers : [\"\",\"\",\"\"], stars : [\"\",\"\",\"\"]} , \r\n                  \r\n                  setErrors : {}};\r\n\r\n    this.handlePicture = this.handlePicture.bind(this);\r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.editMovie = this.editMovie.bind(this);\r\n    this.removeMovie = this.removeMovie.bind(this);\r\n  }\r\n\r\n  //On récupère le movie pour ensuite remplir le formulaire.\r\n  async componentDidMount() {\r\n    try {\r\n      await this.setState({movieID : this.props.location.search.substring(4,this.props.location.search.length)});\r\n      await console.log(this.state.movieID);\r\n      const response = await fetch(\"http://localhost:3001/movies/\"+this.state.movieID);\r\n      const reponseDeApi = await response.json();\r\n      this.setState({ data: reponseDeApi });\r\n      console.log(this.state.data);\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleSave(event){\r\n    event.preventDefault();\r\n    \r\n    const title = document.getElementById('movieTitle').value;\r\n    const picture = document.getElementById('movieBanner').value;\r\n    const director = document.getElementById('director').value;\r\n    const year = document.getElementById('year').value;\r\n    const writers1 = document.getElementById('writers1').value;\r\n    const writers2 = document.getElementById('writers2').value;\r\n    const writers3 = document.getElementById('writers3').value;\r\n    const stars1 = document.getElementById('stars1').value;\r\n    const stars2 = document.getElementById('stars2').value;\r\n    const stars3 = document.getElementById('stars3').value;\r\n\r\n    if(!this.formIsValid(title,picture,director,year,writers1,stars1)) return;\r\n\r\n    this.editMovie(title, year, picture, director, writers1, writers2, writers3, stars1, stars2, stars3);\r\n  }\r\n\r\n  formIsValid(title,picture,director,year,writers1,stars1){\r\n    const _errors = {};\r\n    if(!title) _errors.title = \"The title is required\";\r\n    if(!picture) _errors.picture = \"Movie URL banner is required\";\r\n    if(!director) _errors.director = \"The director's name is required\";\r\n    if(!year) _errors.year = \"The release year of the movie is required\";\r\n    if(!writers1) _errors.writer1 = \"You have to enter at least one writer\";\r\n    if(!stars1) _errors.stars1 = \"You have to enter at least one movie star\";\r\n\r\n    this.setState({setErrors : _errors});\r\n    return Object.keys(_errors).length === 0;\r\n  }\r\n\r\n  async editMovie(title, year, picture, director, writers1, writers2, writers3, stars1, stars2, stars3) { \r\n    try{\r\n       \r\n        const response = await fetch('http://localhost:3001/movies/'+ this.state.movieID, { \r\n        method:'PUT', \r\n        headers: {'Content-Type': 'application/json'}, \r\n        body:JSON.stringify({id : this.state.movieID,\r\n          title: title,\r\n          year: year,\r\n          picture: picture,\r\n          director:director,\r\n          writers: [\r\n             writers1, writers2,writers3\r\n          ],\r\n          stars: [\r\n            stars1,stars2,stars3\r\n          ]\r\n        }) \r\n      }); \r\n      if(response.ok){ \r\n        const jsonResponse = await response.json(); \r\n        this.props.history.push(\"/\");\r\n        toast.success(title + \" added to my favourite movies!\");\r\n\r\n        return jsonResponse; \r\n      } \r\n      throw new Error('Request failed!'); \r\n  } \r\n   catch(error){ \r\n      console.log(error); \r\n   } \r\n} \r\n  \r\n\r\n  handlePicture(event){\r\n    const pic = document.getElementById('movieBanner').value;\r\n    this.setState( {picture : pic});\r\n  }\r\n\r\n  async removeMovie() { \r\n    try{ \r\n    const response = await fetch('http://localhost:3001/movies/'+this.state.movieID, { \r\n      method:'delete', \r\n    }); \r\n    if(response.ok){ \r\n      const jsonResponse = await response.json(); \r\n      console.log(\"DELETION!\");\r\n      this.props.history.push(\"/\");\r\n      toast.error(\"DELETION OF THE MOVIE\");\r\n\r\n      return jsonResponse; \r\n    } \r\n    throw new Error('Request failed!'); \r\n} \r\n catch(error){ \r\n    console.log(error); \r\n } \r\n}\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Container className='mt-5'>\r\n            <Form>\r\n                <Form.Group as={Row} controlId=\"movieID\">   \r\n                    <Form.Group as={Col} controlId=\"movieTitle\">\r\n                        <Form.Label>Movie Title</Form.Label>\r\n                        <Form.Control type=\"text\" defaultValue={this.state.data.title} />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"year\">\r\n                        <Form.Label>Movie's release year</Form.Label>\r\n                        <Form.Control type=\"text\" defaultValue={this.state.data.year} />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"director\">\r\n                        <Form.Label>Director's name</Form.Label>\r\n                        <Form.Control type=\"text\" defaultValue={this.state.data.director} />\r\n                    </Form.Group>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"movieBanner\">\r\n                    <Form.Label>URL of the movie's banner</Form.Label>\r\n                    <Form.Control type=\"text\" defaultValue={this.state.data.picture} onBlur={this.handlePicture}/>\r\n                    {this.state.picture !== \"\" && <Image src={this.state.picture} rounded />}\r\n                </Form.Group>\r\n               \r\n                \r\n                <Form.Label>Writers</Form.Label>\r\n                <Form.Group as={Row} controlId=\"writers\">\r\n                    <Form.Group as={Col} controlId=\"writers1\">\r\n                        <Form.Control type=\"text\"  defaultValue={this.state.data.writers[0]} />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"writers2\">\r\n                        <Form.Control type=\"text\"  defaultValue={ this.state.data.writers[1] }/>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"writers3\">\r\n                        <Form.Control type=\"text\" defaultValue={ this.state.data.writers[2]} />\r\n                    </Form.Group>\r\n                </Form.Group>\r\n                <Form.Label>Stars</Form.Label>\r\n                <Form.Group as={Row} controlId=\"stars\">\r\n                    <Form.Group as={Col} controlId=\"stars1\"> \r\n                        <Form.Control type=\"text\" defaultValue={ this.state.data.stars[0]}  />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"stars2\" >\r\n                        <Form.Control type=\"text\" defaultValue={ this.state.data.stars[1]}  />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"stars3\">\r\n                        <Form.Control type=\"text\" defaultValue={ this.state.data.stars[2]}  />\r\n                    </Form.Group>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.handleSave}>\r\n                    Save\r\n                </Button>\r\n            </Form>\r\n            \r\n            <p className=\"btn btn-danger mt-1\" onClick={this.removeMovie}>Delete the movie</p>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class ButtonAddMovie extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { };\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <> \r\n        <Link to=\"/AddMovie\" className=\"btn btn-primary\">\r\n          Add a movie \r\n        </Link>\r\n      </>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class ButtonReturnToMovies extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <> \r\n        <Link to=\"/\" className=\"btn btn-primary\">\r\n          Return to my favourite movies\r\n        </Link>\r\n      </>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Image} from \"react-bootstrap\";\r\nimport {toast} from \"react-toastify\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nexport class AddMovie extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {picture: \"\", setErrors : {}};\r\n\r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.handlePicture = this.handlePicture.bind(this);\r\n  }\r\n\r\n  async saveMovie(title, year, picture, director, writers1, writers2, writers3, stars1, stars2, stars3) { \r\n    try{ \r\n        const newID = await this.getID();\r\n        const response = await fetch('http://localhost:3001/movies/', { \r\n        method:'POST', \r\n        headers: {'Content-Type': 'application/json'}, \r\n        body:JSON.stringify({id : newID,\r\n          title: title,\r\n          year: year,\r\n          picture: picture,\r\n          director:director,\r\n          writers: [\r\n             writers1, writers2,writers3\r\n          ],\r\n          stars: [\r\n            stars1,stars2,stars3\r\n          ]\r\n        }) \r\n      }); \r\n      if(response.ok){ \r\n        const jsonResponse = await response.json(); \r\n        this.props.history.push(\"/\");\r\n        toast.success(title + \" added to my favourite movies!\");\r\n\r\n        return jsonResponse; \r\n      } \r\n      throw new Error('Request failed!'); \r\n  } \r\n   catch(error){ \r\n      console.log(error); \r\n   } \r\n} \r\n  formIsValid(title,picture,director,year,writers1,stars1){\r\n    const _errors = {};\r\n    if(!title) _errors.title = \"The title is required\";\r\n    if(!picture) _errors.picture = \"Movie URL banner is required\";\r\n    if(!director) _errors.director = \"The director's name is required\";\r\n    if(!year) _errors.year = \"The release year of the movie is required\";\r\n    if(!writers1) _errors.writer1 = \"You have to enter at least one writer\";\r\n    if(!stars1) _errors.stars1 = \"You have to enter at least one movie star\";\r\n\r\n    this.setState({setErrors : _errors});\r\n    return Object.keys(_errors).length === 0;\r\n  }\r\n\r\n  //Retourne le prochain ID pour savoir où ajouter\r\n  async getID() {\r\n    try {\r\n      let nextID = 0 \r\n      const response = await fetch(\"http://localhost:3001/movies\");\r\n      const reponseDeApi = await response.json();\r\n      for (let i=0;i<reponseDeApi.length;i++){\r\n        if(reponseDeApi[i].id > nextID){\r\n            nextID = reponseDeApi[i].id;\r\n        }\r\n      }   \r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return nextID+1;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleSave(event){\r\n    event.preventDefault();\r\n    \r\n    const title = document.getElementById('movieTitle').value;\r\n    const picture = document.getElementById('movieBanner').value;\r\n    const director = document.getElementById('director').value;\r\n    const year = document.getElementById('year').value;\r\n    const writers1 = document.getElementById('writers1').value;\r\n    const writers2 = document.getElementById('writers2').value;\r\n    const writers3 = document.getElementById('writers3').value;\r\n    const stars1 = document.getElementById('stars1').value;\r\n    const stars2 = document.getElementById('stars2').value;\r\n    const stars3 = document.getElementById('stars3').value;\r\n\r\n    if(!this.formIsValid(title,picture,director,year,writers1,stars1)) return;\r\n\r\n    this.saveMovie(title, year, picture, director, writers1, writers2, writers3, stars1, stars2, stars3);\r\n  }\r\n\r\n  handlePicture(event){\r\n    const pic = document.getElementById('movieBanner').value;\r\n    this.setState( {picture : pic});\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        \r\n        <Container>\r\n        <h3>Add new Movie</h3>\r\n            <Form>\r\n                <Form.Group as={Row} controlId=\"movieID\">   \r\n                    <Form.Group as={Col} controlId=\"movieTitle\">\r\n                        <Form.Label>Movie Title</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter the movie's title\" />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"year\">\r\n                        <Form.Label>Movie's release year</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter the year the movie was released\" />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"director\">\r\n                        <Form.Label>Director's name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter the director's name\" />\r\n                    </Form.Group>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"movieBanner\">\r\n                    <Form.Label>URL of the movie's banner</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter a valid url\" onBlur={this.handlePicture}/>\r\n                </Form.Group>\r\n                {this.state.picture !== \"\" && <Image src={this.state.picture} rounded />}\r\n                \r\n                <Form.Label>Writers</Form.Label>\r\n                <Form.Group as={Row} controlId=\"writers\">\r\n                    <Form.Group as={Col} controlId=\"writers1\">\r\n                        <Form.Control type=\"text\" placeholder=\"Enter the writer's name\" />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"writers2\">\r\n                        <Form.Control type=\"text\" placeholder=\"Enter the writer's name\" />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"writers3\">\r\n                        <Form.Control type=\"text\" placeholder=\"Enter the writer's name\" />\r\n                    </Form.Group>\r\n                </Form.Group>\r\n                <Form.Label>Stars</Form.Label>\r\n                <Form.Group as={Row} controlId=\"stars\">\r\n                    <Form.Group as={Col} controlId=\"stars1\"> \r\n                        <Form.Control type=\"text\" placeholder=\"Enter the star's name\" />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"stars2\">\r\n                        <Form.Control type=\"text\" placeholder=\"Enter the star's name\" />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"stars3\">\r\n                        <Form.Control type=\"text\" placeholder=\"Enter the star's name\" />\r\n                    </Form.Group>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.handleSave}>\r\n                    Save\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n      \r\n      </>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from \"react-router-dom\";\nimport { ManageMovies } from \"./ManageMovies\";\nimport { PageNotFound } from \"./PageNotFound\";\nimport { EditMovie } from \"./EditMovie\";\nimport { ButtonAddMovie } from \"./ButtonAddMovie\";\nimport { ButtonReturnToMovies } from \"./ButtonReturnToMovies\";\nimport { AddMovie } from \"./AddMovie\";\n\nimport { useLocation } from 'react-router-dom' \nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction App() {\n  let location = useLocation(); \n  console.log(location.pathname); \n  return (\n    <> \n    <Container fluid>\n      <Row>\n        <Col xs xl=\"12\" className=\"d-flex justify-content-between align-items-center\">\n          <div><h1>My favourite movies</h1></div>\n          <div>{location.pathname !== \"/AddMovie\" && !location.pathname.startsWith(\"/Movies\") && <ButtonAddMovie/>} \n              {(location.pathname !== \"/\") && <ButtonReturnToMovies/> }\n          </div> \n          \n        </Col>\n      </Row>\n        \n    \n      <Switch>\n          <Route path=\"/\" exact component={ManageMovies} /> \n          <Route path=\"/Movies/:id\" component={EditMovie} />\n          <Route path=\"/AddMovie\" component={AddMovie} /> \n          <Route component={PageNotFound} />\n      </Switch>\n    </Container>\n    </> \n  );\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<React.StrictMode>\n    <Router> \n      <App />\n    </Router> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}