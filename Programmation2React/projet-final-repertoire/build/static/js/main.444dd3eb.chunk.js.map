{"version":3,"sources":["components/Accueil.js","components/AjouterEtudiant.js","components/Menu.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["Accueil","from","opacity","to","config","delay","duration","props","style","className","React","Component","AjouterEtudiant","state","photo","setErrors","handleAdd","bind","handlePhoto","addEtudiant","prenom","nom","adresse","codePostal","telephone","cours","fetch","method","headers","body","JSON","stringify","firstName","name","picture","address","postalCode","course","response","ok","json","jsonResponse","this","history","push","Error","console","log","event","preventDefault","document","getElementById","value","adresseEtudiant","photos","setState","Container","Row","Col","Form","Group","controlId","Label","Control","type","placeholder","onBlur","Image","src","rounded","width","Button","variant","onClick","Menu","activeStyle","fontWeight","color","link","paddingRight","paddingLeft","Navbar","expand","exact","Brand","marginLeft","Nav","Footer","App","location","useLocation","pathname","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.444dd3eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../styles/accueil.sass';\r\nimport {Spring} from 'react-spring/renderprops';\r\n\r\nexport class Accueil extends React.Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n  <>\r\n    \r\n    <Spring from={{opacity:0}} to={{opacity:1}} config={{delay: 500, duration:700}}>\r\n      {props =>( \r\n        <div style={props}>\r\n\r\n          <div className='main-content '>\r\n            <div className='portfolio'> \r\n                <div className='portfolio-item medium one'></div>\r\n                <div className='portfolio-item large two'></div>\r\n                <div className='portfolio-item medium three'></div>\r\n                <div className='portfolio-item small four'></div>\r\n                <div className='portfolio-item tall five'></div>\r\n                <div className='portfolio-item wide six'></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Spring>\r\n\r\n\r\n  </>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Form, Button,Image,Container,Row,Col } from \"react-bootstrap\";\r\n\r\nexport class AjouterEtudiant extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {photo: \"\", setErrors : {}};\r\n\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n    this.handlePhoto = this.handlePhoto.bind(this);\r\n    this.addEtudiant = this.addEtudiant.bind(this);\r\n  }\r\n\r\n  async addEtudiant(prenom, nom, photo, adresse, codePostal, telephone, cours ) { \r\n    try{ \r\n      const response = await fetch('https://crudcrud.com/api/b179fdcd82d74cbe8773f514846405a3/etudiants', { \r\n        method:'POST', \r\n        headers: {'Content-Type': 'application/json'  }, \r\n        body:JSON.stringify({\r\n          firstName: prenom,  \r\n          name: nom,\r\n          picture: photo,\r\n          address: adresse,\r\n          postalCode: codePostal,\r\n          telephone: telephone,\r\n          course: cours\r\n        }) \r\n      }); \r\n      if(response.ok){ \r\n        const jsonResponse = await response.json(); \r\n        this.props.history.push(\"/\");\r\n        //toast.success(\"Ajout d'étudiant \" + prenom +\" \" + nom);\r\n\r\n        return jsonResponse; \r\n      } \r\n      throw new Error('Request failed!'); \r\n  } \r\n   catch(error){ \r\n      console.log(error); \r\n   } \r\n}\r\n\r\n  handleAdd(event){\r\n    event.preventDefault();\r\n    \r\n    const prenom = document.getElementById('prenomEtudiant').value;\r\n    const nom = document.getElementById('nomEtudiant').value;\r\n    const photo = document.getElementById('photoEtudiant').value;\r\n    const adresseEtudiant = document.getElementById('adresseEtudiant').value;\r\n    const codePostal = document.getElementById('codePostal').value;\r\n    const telephone = document.getElementById('telephone').value;\r\n    const cours = document.getElementById('cours').value;\r\n\r\n\r\n    this.addEtudiant(prenom, nom, photo, adresseEtudiant, codePostal, telephone, cours);\r\n  }\r\n\r\n  handlePhoto(event){\r\n    const photos = document.getElementById('photoEtudiant').value;\r\n    this.setState( {photo : photos});\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log(this.props.history);\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n            <Form.Group controlId=\"prenomEtudiant\">\r\n                <Form.Label>Prénom de l'étudiant</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer le prénom de l'étudiant\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"nomEtudiant\">\r\n                <Form.Label>Nom de l'étudiant</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer le nom de l'étudiant\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"photoEtudiant\">\r\n                <Form.Label>URL d'une photo de l'étudiant</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer une URL valide\" onBlur={this.handlePhoto}/>\r\n              </Form.Group>\r\n              {this.state.photo !== \"\" && <Image src={this.state.photo} rounded width=\"125\"/>}\r\n              <Form.Group controlId=\"adresseEtudiant\">\r\n                <Form.Label>Adresse</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer l'adresse de l'étudiant\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"codePostal\">\r\n                <Form.Label>Code postal</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer le code postal\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"telephone\">\r\n                <Form.Label>Téléphone</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer le téléphone\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"cours\">\r\n                <Form.Label>Cours</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer le cours\" />\r\n              </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" onClick={this.handleAdd}>\r\n                Enregistrer\r\n            </Button>\r\n            </Form>  \r\n            </Col>    \r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}","import React from \"react\"; \r\nimport {Nav,Navbar} from \"react-bootstrap\" \r\nimport {NavLink} from 'react-router-dom' \r\n\r\nimport {Link} from 'react-router-dom' \r\nimport '../styles/navbar.sass';\r\nimport {Spring} from 'react-spring/renderprops';\r\n\r\n\r\nexport class Menu extends React.Component { \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\nrender() { \r\nconst activeStyle = {fontWeight: \"bold\",color: \"red\"};\r\nconst link ={\r\n    paddingRight: '2rem',\r\n    paddingLeft: '2rem',\r\n}\r\nreturn ( \r\n        \r\n\r\n                <Navbar className='color-nav' expand='md'> \r\n                <Link exact='true' to=\"/Accueil\"><Navbar.Brand >\r\n                    <Spring from={{marginLeft:-1000} } to={{ marginLeft:0}} config={{delay: 500, duration:700}}>\r\n                    {props =>( \r\n                        <div className='title' style={props}>\r\n                        \r\n                        <h1>projet<span>final</span> - Répertoire des étudiants</h1>\r\n                        \r\n                        </div>\r\n                    )}\r\n                    </Spring></Navbar.Brand> </Link>\r\n                \r\n                <Nav className=\"ml-auto\"> \r\n                    <NavLink to=\"/Accueil\" style={link} activeStyle={activeStyle}>Accueil</NavLink>      \r\n                    <NavLink to=\"/Ajout\" style={link} activeStyle={activeStyle}>Ajouter Étudiant</NavLink> \r\n                </Nav> \r\n        \r\n                </Navbar>      \r\n          \r\n       \r\n                );\r\n                    }\r\n}","import React from 'react';\r\nimport '../styles/footer.sass';\r\n\r\nexport  function Footer() {\r\n \r\n  return (\r\n    <div className=\" footer\">\r\n      <p className=\"m-0 text-center text-white\">Copyright &copy; Eric Martins 2020</p>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom' \n\nimport { Accueil } from \"./Accueil\";\nimport { AjouterEtudiant } from \"./AjouterEtudiant\";\nimport {Menu} from './Menu'; \nimport { Footer } from \"./Footer\";\n\nimport '../styles/navbar.sass';\n\n\n\n\n\nfunction App() {\n  let location = useLocation(); \n  console.log(location.pathname); \n  return (\n  \n   <div className='bg container-fluid'>\n      <Menu/>\n      <Switch>\n          <Route path=\"/\" exact component={Accueil} /> \n          <Route path=\"/Accueil\" component={Accueil} /> \n          <Route path=\"/Ajout\" component={AjouterEtudiant} /> \n      </Switch>\n      <Footer/>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router} from 'react-router-dom' \n\nReactDOM.render(\n  <React.StrictMode>\n    <Router> \n      <App />\n    </Router> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}